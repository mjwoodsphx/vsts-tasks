{
  "loc.friendlyName": "Maven",
  "loc.helpMarkDown": "[More Information](https://go.microsoft.com/fwlink/?LinkID=613723)",
  "loc.description": "Build with Apache Maven",
  "loc.instanceNameFormat": "Maven $(mavenPOMFile)",
  "loc.group.displayName.junitTestResults": "JUnit Test Results",
  "loc.group.displayName.codeCoverage": "Code Coverage",
  "loc.group.displayName.advanced": "Advanced",
  "loc.group.displayName.CodeAnalysis": "Code Analysis",
  "loc.input.label.mavenPOMFile": "Maven POM file",
  "loc.input.help.mavenPOMFile": "Relative path from the repository root to the Maven POM file.",
  "loc.input.label.options": "Options",
  "loc.input.label.goals": "Goal(s)",
  "loc.input.label.publishJUnitResults": "Publish to TFS/Team Services",
  "loc.input.help.publishJUnitResults": "Select this option to publish JUnit test results produced by the Maven build to TFS/Team Services. Each test results file matching `Test Results Files` will be published as a test run in TFS/Team Services.",
  "loc.input.label.testResultsFiles": "Test Results Files",
  "loc.input.help.testResultsFiles": "Test results files path. Wildcards can be used. For example, `**/TEST-*.xml` for all XML files whose name starts with TEST-.",
  "loc.input.label.testRunTitle": "Test Run Title",
  "loc.input.help.testRunTitle": "Provide a name for the test run.",
  "loc.input.label.codeCoverageTool": "Code Coverage Tool",
  "loc.input.help.codeCoverageTool": "Select the code coverage tool.",
  "loc.input.label.classFilter": "Class Inclusion/Exclusion Filters",
  "loc.input.help.classFilter": "Comma-separated list of filters to include or exclude classes from collecting code coverage. For example: +:com.*,+:org.*,-:my.app*.*.",
  "loc.input.label.classFilesDirectories": "Class Files Directories",
  "loc.input.help.classFilesDirectories": "This field is required for a multi-module project. Specify a comma-separated list of relative paths from the Maven POM file to directories containing class files and archive files (JAR, WAR, etc.). Code coverage is reported for class files in these directories. For example: target/classes,target/testClasses.",
  "loc.input.label.srcDirectories": "Source Files Directories",
  "loc.input.help.srcDirectories": "This field is required for a multi-module project. Specify a comma-separated list of relative paths from the Maven POM file to source code directories. Code coverage reports will use these to highlight source code. For example: src/java,src/Test.",
  "loc.input.label.javaHomeSelection": "Set JAVA_HOME by",
  "loc.input.help.javaHomeSelection": "Sets JAVA_HOME either by selecting a JDK version that will be discovered during builds or by manually entering a JDK path.",
  "loc.input.label.jdkVersion": "JDK Version",
  "loc.input.help.jdkVersion": "Will attempt to discover the path to the selected JDK version and set JAVA_HOME accordingly.",
  "loc.input.label.jdkUserInputPath": "JDK Path",
  "loc.input.help.jdkUserInputPath": "Sets JAVA_HOME to the given path.",
  "loc.input.label.jdkArchitecture": "JDK Architecture",
  "loc.input.help.jdkArchitecture": "Optionally supply the architecture (x86, x64) of the JDK.",
  "loc.input.label.mavenVersionSelection": "Maven Version",
  "loc.input.help.mavenVersionSelection": "Uses either the default Maven version or the version in the specified custom path.",
  "loc.input.label.mavenPath": "Maven Path",
  "loc.input.help.mavenPath": "Supply the custom path to the Maven installation (e.g., /usr/share/maven).",
  "loc.input.label.mavenSetM2Home": "Set M2_HOME variable",
  "loc.input.help.mavenSetM2Home": "Sets the M2_HOME variable to a custom Maven installation path.",
  "loc.input.label.sqAnalysisEnabled": "Run SonarQube Analysis",
  "loc.input.help.sqAnalysisEnabled": "Run a [SonarQube analysis](https://go.microsoft.com/fwlink/?LinkID=708598) after executing the current goals. 'install' or 'package' goals should be executed first.",
  "loc.input.label.sqConnectedServiceName": "SonarQube Endpoint",
  "loc.input.help.sqConnectedServiceName": "The SonarQube server generic endpoint",
  "loc.input.label.sqDbDetailsRequired": "The SonarQube server version is lower than 5.2",
  "loc.input.help.sqDbDetailsRequired": "If using a SonarQube server 5.1 or lower, you must specify the database connection details.",
  "loc.input.label.sqDbUrl": "Db Connection String",
  "loc.input.help.sqDbUrl": "SonarQube server 5.1 and lower only. Enter the database connection setting (i.e. sonar.jdbc.url). For example: jdbc:jtds:sqlserver://localhost/sonar;SelectMethod=Cursor",
  "loc.input.label.sqDbUsername": "Db Username",
  "loc.input.help.sqDbUsername": "SonarQube server 5.1 and lower only. Enter the username for the database user (i.e. sonar.jdbc.username).",
  "loc.input.label.sqDbPassword": "Db User Password",
  "loc.input.help.sqDbPassword": "SonarQube server 5.1 and lower only. Enter the password for the database user i.e. sonar.jdbc.password",
  "loc.input.label.pmdAnalysisEnabled": "Run PMD Analysis",
  "loc.input.help.pmdAnalysisEnabled": "Use the PMD Java static analysis tool to look for bugs in the code.",
  "loc.messages.codeAnalysis_ToolIsEnabled": "%s analysis is enabled.",
  "loc.messages.codeAnalysis_ToolFailed": "%s analysis failed.",
  "loc.messages.sqAnalysis_IncrementalMode": "Detected a PR build - running the SonarQube analysis in incremental mode",
  "loc.messages.sqAnalysis_BuildSummaryTitle": "SonarQube Analysis Report",
  "loc.messages.sqAnalysisBuildSummaryLine_OneProject": "Detailed SonarQube report",
  "loc.messages.sqAnalysisBuildSummary_NoReportTaskFileFound": "Expected to find SonarQube report file(s) on disk, but found none.",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsSomeFiles": "%s found %d violations in %d files.",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsOneFile": "%s found %d violations in 1 file.",
  "loc.messages.codeAnalysisBuildSummaryLine_OneViolationOneFile": "%s found 1 violation in 1 file.",
  "loc.messages.codeAnalysisBuildSummaryLine_NoViolations": "%s found no violations."
}